# Windows AntiVirus Scanner with USB Log Analysis

The Windows AntiVirus Scanner with USB Log Analysis is a Python script designed to scan files on Windows systems for potential malware using multi-threading. The script also includes the functionality to analyze USB device insertions and generate logs. Detected malicious files can be quarantined, and scan results are logged for analysis.

## Prerequisites
1. Python installed on your system.
2. Required Python libraries: `psutil`, `keyboard`, `pandas`, `pywinusb` ,'openpyxl'. Install them using `pip install psutil keyboard pandas pywinusb openpyxl`.

## Usage
1. Place the script (`antivirus_usb_scanner.py`) and a configuration file (`config.ini`) in the same directory.
2. Customize the configuration in `config.ini`, including quarantine settings, maximum threads, and more.
3. Run the script: `python antivirus_usb_scanner.py`.
4. Choose from the provided options: USB log analysis, scan malware based on USB, or exit the script.

## USB Log Analysis
1. Select "Run USB log analysis" from the menu.
2. The script retrieves USB device information and generates an Excel file (`usb_logs.xlsx`) with details.

## Malware Scan
1. Select "Scan Malware based on USB" from the menu.
2. The script scans files on connected drives for potential malware.
3. Detected malicious files can be quarantined (if enabled).
4. Scan results are logged, including infected files, scan duration, and more.

## Important Notes
- The script supports multi-threaded scanning for efficient malware detection.
- USB log analysis provides insights into connected USB devices.
- Detected malicious files can be quarantined (if enabled in the configuration).
- Ensure that the `config.ini` file is properly configured before running the script.
- The script requires administrative privileges to access system and registry information.

## Customization
- Modify the `config.ini` file to adjust settings such as quarantine, maximum threads, and more.
- Add or update known malicious file hashes in the `KNOWN_MALICIOUS_HASHES` dictionary for accurate detection.

## Exit
1. Select "Exit" from the menu to terminate the script.

For more details and customization options, refer to the script's inline comments and documentation.

---
Note: Use this script responsibly and exercise caution while handling potential malware. Always ensure you have appropriate permissions to access system resources.




Replace antivirus_usb_scanner.py with the actual name of your script. This README provides instructions on using the script, customizing the configuration, USB log analysis, malware scanning, known malicious file hashes, and other important considerations while using the tool.